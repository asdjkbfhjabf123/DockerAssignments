Assignment

NOTE: Do not forget to see manual page using "--help" option in command when searching for options/commands for a particular task.

1. Install Docker, either on your native OS or on a VM. Make sure it runs. Type "docker -v" to check if it's installed.

If you can't install or configure Docker, you can use the online docker setup to do the assignment.
Step1 Goto:- https://www.katacoda.com/courses/kubernetes/playground
Step2 Click on "continue" button on the left panel
Step3 Click on "launch.sh" button on the left panel
Step4 From the right panel use the top console to execute below command:-
		docker -v


Try below commands for help
	docker --help  ---> This command shows all available options and commands to work with images and containers
	docker image --help ---> This command shows all the avaialble options and commands to work with docker images
	docker container --help ---> This command shows all the avaialble options and commands to work with docker containers

NOTE:- DO NOT TRY TO USE INTERNET TO SOLVE ASSIGNMENT, BETTER USE THE ABOVE --help OPTION TO SEE THE MANUAL OF ANY PARTICULAR COMMAND AND FIGURE OUT THE SOLUTIONS ON YOUR OWN.

2. Find an image from dockerhub of your choice(recommnded: nginx), don't use browser, pull the official image from dockerhub
Ans> docker pull nginx
3. List all the available images in your machine/vm, make sure you see recently pulled image in the list.
Ans>docker images
4. Find out the "Full" ImageId of the image that you pulled and write it below.
Ans>docker images -q
5. Create a container of your image 
Ans>docker run -it <image-id>
6. List all the running containers
Ans>docker ps
7. List all the running and stopped containers
Ans>docker ps -a
8. Find out the "Full" containerId of the container and write it below.
Ans>sudo docker ps -aqf "name=containername"
9. Find out how many image layers are used to build this image.
Ans>docker ps -a
10. Get the Apache Tomcat 7 server image from the docker hub.
Ans>docker pull tomcat
11. Run the Apache Tomcat 7, I mean create a container of Apache Tomcat.
Ans>docker run -it tomcat
12. Find out what is the IP Address of the Apache Tomcat Container that it is running on
Ans>docker inspect <containerID>
13. Which Port it is using?
Ans> docker port container_id
14. Try to access the Tomcat's home page from your machine/vm.
Ans>docker run -p 8080:8080 -p 50000:50000 <container>
15. What is the disk size of Apache Tomcat image?
Ans> docker ps --size
16. Find out list of all environment variables that is configured for tomcat image, can you see JAVA_HOME and CATALINA_HOME? What did you notice about it?
Ans>docker container ls
17. Find out which port is exposed for tomcat?
Ans>docker --publish
18. Run multiple containers of tomcat on different port and access it's home page.
Ans>    docker run -p 8080:8080 tomcat:9
	docker run -p 8081:8080 tomcat:9
19. Pull ubuntu os from dockerhub, try to pull 2 images of ubuntu, Except the latest one.
Ans>	docker pull ubuntu:19.10
	docker pull ubuntu:18.10
20. Run the container of ubuntu in attached mode.
Ans>	docker run -p 8000:8080 --name Ubantu ubuntu:latest
21. Run the container of another ubuntu in detached mode.
Ans>	docker run -d -p 8000:8080 --name Ubuntu ubuntu:latest
22. Check how many ubuntu containers are running and stopped
Ans>	docker ps -a | grep ubuntu
23. Is the tomcat container running? If no, start one.
Ans>	docker ps -a
	docker start containerId
24. Check the logs, generated by tomcat container(don't forget to make request to tomcat's home page to see the log).
Ans>	docker logs -f containerId
25. Check if ubuntu conatiner is running? If no, start one in attached mode to the terminal.
Ans>	docker start containerId
26. Login as root user in ubuntu container
Ans>	sudo su -
27. Create a file with any name in root directory
Ans>	vi Dockerfile
28. Install software of your choice in ubuntu container using "apt-get install"
Ans>	apt-get install GIMP
29. Now exit the ubuntu shell, are you back to your host machine, if not, come back to the host machine.
Ans>	exit
30. Check if the ubuntu container is running.
Ans>	docker ps | grep ubuntu
31. Create a new ubuntu container out of the same image as that previous container in attached mode.
Ans>	docker run -d --name new_ubuntu -p 8009:8080 ubuntu:latest
32. Login as a root user
Ans> sudo su -
33. Check if you can see the file created in previous container, you will not see the file as well as software that you installed in the previous container. Now kill this Container.
Ans>	docker container kill containername
34. Do you have the previous ubuntu container where you created the file and installed the software? If no reapeat step 25 to 29.
Ans>	Yes
35. Create an Image out of the existing container.
Ans>	
36. Now Create a Container out of this image and login into it to see if you can see the file and software installed by you in the previous container.
37. Do you have running tomcat container? If yes, Stop it and kill all tomcat container.
38. Create an index.html file with following code in it:-
	<h1>This is Tomcat Container</h1>
Now, Start a tomcat container in such a way that on hitting its URL for home page it should show the above html page.
39. type below command:-
	docker images --help
Now, try to run command that proves the concept of following three options:-
1. -a
2. -f
3. -q

write atleast 1 command using each option above and prove their concepts as described in the --help.


40. type below command:-
	docker ps --help
Now, try to run command that proves the concept of following six options:-
1. -a
2. -f
3. -q
4. -n
5. -l
6. -s

