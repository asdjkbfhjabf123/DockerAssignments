Your supermarket company is working on expanding their Docker infrastructure. They have an existing service that provides a list of fruit sold in their stores. After measuring the amount of load on this service, they have asked you to scale this service up to a higher number of replicas.

In addition, there is a new service that provides a list of vegetables. This new service needs to be created in the cluster. Set up the swarm cluster to complete the lab, ensure that the swarm meets the following specifications:

1. Scale the service called products-fruit to 5 replicas.
2. Create a new service called products-vegetables running the linuxacademycontent/vegetable-service:1.0.0 image.
3. Publish products-vegetables on port 8081. The application listens on port 80.
4. Run products-vegetables with 3 replicas.

You can test the products-fruit service from any swarm node (including the manager) with curl localhost:8080.

Once products-vegetables is running, you should be able to test it from any swarm node (including the manager) with curl localhost:8081.

Good luck! 

Solution:

 Scale the service called products-fruit to 5 replicas.
 ===========================
 
 Login to Manager host and initialize the swarm 
 
 docker swarm init --advertise-addr ManagerIP
 
 Now, SSH to the worker-01 node and run the below command to join swarm (Manager)
 
 root@swarm-01:~# docker swarm join \
> --token SWMTKN-1-51pzs5ax8dmp3h0ic72m9wq9vtagevp1ncrgik115qwo058ie6-3fokbd3onl2i8r7dowtlwh7kb \
> 10.0.0.1:2377

 From Manager machine run below command to create the service:
 ===================
 
 root@manager:~# docker service create --replicas 2 -p 80:80 --name products-fruit nginx
 
 TO scale the service:
 ==========
 docker service scale products-fruit=5 
 
 Repeat the above joining command to add worker-02 node:
 Run the below command from manager machine to create another service:
 ====================
 
 root@manager:~# docker service create --replicas 3 -p 8081:80 --name products-vegetables linuxacademycontent/vegetable-service:1.0.0
 
 =================================
 
[root@ip-172-31-17-89 ~]# docker ps -a
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS                   PORTS               NAMES
c8ba5254437a        nginx:1.15.8        "nginx -g 'daemon of…"   4 hours ago         Exited (0) 2 hours ago                       nginx
ee78cc5466c1        fruit-list:1.0.0    "nginx -g 'daemon of…"   4 hours ago         Exited (0) 2 hours ago                       product-frui                                                       t
[root@ip-172-31-17-89 ~]# docker start c8ba5254437a
c8ba5254437a
[root@ip-172-31-17-89 ~]# docker start ee78cc5466c1
ee78cc5466c1
[root@ip-172-31-17-89 ~]# docker ps -a
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                  NAMES
c8ba5254437a        nginx:1.15.8        "nginx -g 'daemon of…"   4 hours ago         Up 34 seconds       80/tcp                 nginx
ee78cc5466c1        fruit-list:1.0.0    "nginx -g 'daemon of…"   4 hours ago         Up 11 seconds       0.0.0.0:8080->80/tcp   product-fruit
[root@ip-172-31-17-89 ~]# curl http://localhost:8080
{
  "description": "A list of fruits.",
  "fruits": [
    "apple",
    "apricot",
    "avocado",
    "banana",
    "bell pepper",
    "bilberry",
    "blackberry",
    "blackcurrant",
    "blood orange",
    "blueberry",
    "boysenberry",
    "breadfruit",
    "canary melon",
    "cantaloupe",
    "cherimoya",
    "cherry",
    "chili pepper",
    "clementine",
    "cloudberry",
    "coconut",
    "cranberry",
    "cucumber",
    "currant",
    "damson",
    "date",
    "dragonfruit",
    "durian",
    "eggplant",
    "elderberry",
    "feijoa",
    "fig",
    "goji berry",
    "gooseberry",
    "grape",
    "grapefruit",
    "guava",
    "honeydew",
    "huckleberry",
    "jackfruit",
    "jambul",
    "jujube",
    "kiwi fruit",
    "kumquat",
    "lemon",
    "lime",
    "loquat",
    "lychee",
    "mandarine",
    "mango",
    "mulberry",
    "nectarine",
    "nut",
    "olive",
    "orange",
    "pamelo",
    "papaya",
    "passionfruit",
    "peach",
    "pear",
    "persimmon",
    "physalis",
    "pineapple",
    "plum",
    "pomegranate",
    "pomelo",
    "purple mangosteen",
    "quince",
    "raisin",
    "rambutan",
    "raspberry",
    "redcurrant",
    "rock melon",
    "salal berry",
    "satsuma",
    "star fruit",
    "strawberry",
    "tamarillo",
    "tangerine",
    "tomato",
    "ugli fruit",
    "watermelon"
  ]
}
[root@ip-172-31-17-89 ~]# docker node ls
ID                            HOSTNAME            STATUS              AVAILABILITY        MANAGER STATUS      ENGINE VERSION
0t7qxwkd634q1m3e92aobyysm *   ip-172-31-17-89     Ready               Active              Leader              19.03.6-ce
[root@ip-172-31-17-89 ~]# docker swarm join-token worker
To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-0i6gxky38g1ejnjz1pqvgcntcuhhppjzbjxwrp630vaynod743-4dxoes9lp14m4knquz3j586tt 172.31.17.89:2377

[root@ip-172-31-17-89 ~]#
[root@ip-172-31-17-89 ~]# docker node ls
ID                            HOSTNAME            STATUS              AVAILABILITY        MANAGER STATUS      ENGINE VERSION
0t7qxwkd634q1m3e92aobyysm *   ip-172-31-17-89     Ready               Active              Leader              19.03.6-ce
b60frtin299jshpkynlwow08w     ip-172-31-34-18     Ready               Active                                  19.03.6-ce
[root@ip-172-31-17-89 ~]# docker swarm join-token worker
To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-0i6gxky38g1ejnjz1pqvgcntcuhhppjzbjxwrp630vaynod743-4dxoes9lp14m4knquz3j586tt 172.31.17.89:2377

[root@ip-172-31-17-89 ~]#
[root@ip-172-31-17-89 ~]# docker node ls
ID                            HOSTNAME            STATUS              AVAILABILITY        MANAGER STATUS      ENGINE VERSION
0t7qxwkd634q1m3e92aobyysm *   ip-172-31-17-89     Ready               Active              Leader              19.03.6-ce
b60frtin299jshpkynlwow08w     ip-172-31-34-18     Ready               Active                                  19.03.6-ce
o5lw99gzin6s7oiqsoc3hwsnm     ip-172-31-34-220    Ready               Active                                  19.03.6-ce
[root@ip-172-31-17-89 ~]# docker node ls
ID                            HOSTNAME            STATUS              AVAILABILITY        MANAGER STATUS      ENGINE VERSION
0t7qxwkd634q1m3e92aobyysm *   ip-172-31-17-89     Ready               Active              Leader              19.03.6-ce
b60frtin299jshpkynlwow08w     ip-172-31-34-18     Ready               Active                                  19.03.6-ce
o5lw99gzin6s7oiqsoc3hwsnm     ip-172-31-34-220    Ready               Active                                  19.03.6-ce
[root@ip-172-31-17-89 ~]# docker ps -a
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                  NAMES
c8ba5254437a        nginx:1.15.8        "nginx -g 'daemon of…"   5 hours ago         Up 32 minutes       80/tcp                 nginx
ee78cc5466c1        fruit-list:1.0.0    "nginx -g 'daemon of…"   5 hours ago         Up 31 minutes       0.0.0.0:8080->80/tcp   product-fruit
[root@ip-172-31-17-89 ~]# docker service create --replicas 2 -p 80:80 --name products-fruit nginx
is13sfwdqylhf7eor6533ikvp
overall progress: 2 out of 2 tasks
1/2: running   [==================================================>]
2/2: running   [==================================================>]
verify: Service converged
[root@ip-172-31-17-89 ~]# docker serive ls
docker: 'serive' is not a docker command.
See 'docker --help'
[root@ip-172-31-17-89 ~]# docker service ls
ID                  NAME                MODE                REPLICAS            IMAGE               PORTS
is13sfwdqylh        products-fruit      replicated          2/2                 nginx:latest        *:80->80/tcp
[root@ip-172-31-17-89 ~]# docker service ps products-fruit
ID                  NAME                IMAGE               NODE                DESIRED STATE       CURRENT STATE           ERROR                                                                      PORTS
kg7bovjw2i2m        products-fruit.1    nginx:latest        ip-172-31-17-89     Running             Running 3 minutes ago                                                                            
ja7a2e797pch        products-fruit.2    nginx:latest        ip-172-31-34-220    Running             Running 3 minutes ago                                                                            
[root@ip-172-31-17-89 ~]# docker service scale products-fruits=5
products-fruits: Error: No such service: products-fruits
[root@ip-172-31-17-89 ~]# docker service scale products-fruit=5
products-fruit scaled to 5
overall progress: 5 out of 5 tasks
1/5: running   [==================================================>]
2/5: running   [==================================================>]
3/5: running   [==================================================>]
4/5: running   [==================================================>]
5/5: running   [==================================================>]
verify: Service converged
[root@ip-172-31-17-89 ~]# docker service ls
ID                  NAME                MODE                REPLICAS            IMAGE               PORTS
is13sfwdqylh        products-fruit      replicated          5/5                 nginx:latest        *:80->80/tcp
[root@ip-172-31-17-89 ~]# docker service ps products-fruit
ID                  NAME                IMAGE               NODE                DESIRED STATE       CURRENT STATE            ERROR                                                                      PORTS
kg7bovjw2i2m        products-fruit.1    nginx:latest        ip-172-31-17-89     Running             Running 8 minutes ago                                                                            
ja7a2e797pch        products-fruit.2    nginx:latest        ip-172-31-34-220    Running             Running 8 minutes ago                                                                            
gva6z067vsmk        products-fruit.3    nginx:latest        ip-172-31-34-18     Running             Running 33 seconds ago                                                                           
tegv0ru73ie0        products-fruit.4    nginx:latest        ip-172-31-34-18     Running             Running 33 seconds ago                                                                           
oxor7m5928yi        products-fruit.5    nginx:latest        ip-172-31-34-220    Running             Running 39 seconds ago         

[root@ip-172-31-17-89 ~]# docker service create --name products-vegetables -p 8081:80 linuxacademycontent/vegetable-service:1.0.0
dsfdskl9883274jn324o
overall progress: 1 out of 1 tasks
1/1: running
verify: Service converged                

[root@ip-172-31-17-89 ~]# curl http://localhost:8081
{
  "description": "A list of Vegetables.",
  "Vegetables": [
    "Beans",
    "carrot",
    "onion",
    "banana",
    "bell pepper",
    "bilberry",
    "blackberry",
    "blackcurrant",
    "blood orange",
    "blueberry",
    "boysenberry",
    ]
}	

[root@ip-172-31-17-89 ~]# docker service update --replicas 3 products-vegetables

products-vegetables
overall progress: 3 out of 3 tasks
1/3: running   [==================================================>]
2/3: running   [==================================================>]
3/3: running   [==================================================>]
verify: Service converged

master $ docker service ls
ID                  NAME                  MODE                REPLICAS            IMAGE                                         PORTS
dsf76s666w8e        products-fruit        replicated          1/1                 linuxacademycontent/fruit-service:1.0.0       *:8080->80/tcp
psf89ewqae2m        products-vegetables   replicated          3/3                 linuxacademycontent/vegetable-service:1.0.0   *:8081->80/tcp




 
 
 